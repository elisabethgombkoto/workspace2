/**
 * 
 */
package hue10.puzzel8;

import java.util.List;
import java.util.Set;
import java.util.Stack;

/**
 * @author ElisabethElisabeth Gombkötö
 *17.01.2017WS_2016
 */
public class Solutions {
	public  boolean _isSolved;
	public  List<Puzzle8> _result;
	public int expansion;
	public  Set<Puzzle8> _closeList;
	public double _effectiveBranchingFactor;
	/**
	 * @param isSolved
	 * @param result
	 * @param expansion
	 * @param closeList
	 */
	public Solutions(boolean isSolved, Stack<Puzzle8> result, int expansion, Set<Puzzle8> closeList) {
		_isSolved=isSolved;
		_result=result;
		this.expansion=expansion;
		_closeList=closeList;
		
		double n=expansion;
		double d=result.size();
		_effectiveBranchingFactor=BranchingFactorCalculator.calculate(n,d);
			
	}
	
	public void printSummary() {
		System.out.println("start Puzzel8: ");
		System.out.println(result.get(0));
		System.out.println("end Puzzel8: ");
		System.out.println(_result.get(_result.size() - 1));
		System.out.println("solution found: " + _isSolved);
		System.out.println("optimal path: " + solutionNodes.size());
		System.out.println("nodes created: " + amountCreatedNodes);
		System.out.println("nodes visited: " + visitedNodes.size());
		System.out.println("effective brancing factor: " + effectiveBranchingFactor);

	}

	/**
	 * @return the _isSolved
	 */
	public boolean is_isSolved() {
		return _isSolved;
	}

	/**
	 * @return the _result
	 */
	public List<Puzzle8> get_result() {
		return _result;
	}

	/**
	 * @return the expansion
	 */
	public int getExpansion() {
		return expansion;
	}

	/**
	 * @return the _closeList
	 */
	public Set<Puzzle8> get_closeList() {
		return _closeList;
	}

}
